import{supabase as i}from"./supabase-CPQ3eL74.js";import{a as y}from"./auth-store-MnmwA6R3.js";import{z as g,r as m}from"./index-B3spGy88.js";const q=m([]),b=m([]),h=m(0);let c=null,l=null;const A=()=>{const{shouldShowLoading:E,markDataLoaded:w}=y(),v=g(()=>h.value>0),o=async(n,e=!0,r="friends")=>{const s=e&&E(r);s&&h.value++;try{const t=await n();return e&&w(r),t}catch(t){throw console.error(`Error in withLoading for ${r}:`,t),e&&w(r),t}finally{s&&(h.value=Math.max(0,h.value-1))}},F=g(()=>b.value),S=g(()=>q.value),L=async(n,e)=>o(async()=>{try{const{data:r,error:s}=await i.from("friendships").insert([{user_id:e,friend_id:n,status:"pending"}]).select().single();if(s)throw s;return{data:r,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),C=async(n,e)=>o(async()=>{try{const{data:r,error:s}=await i.from("friendships").update({status:"accepted"}).eq("id",n).select().single();if(s)throw s;return e&&await u(e,!0),{data:r,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),R=async n=>o(async()=>{try{const{data:e,error:r}=await i.from("friendships").update({status:"declined"}).eq("id",n).select().single();if(r)throw r;return{data:e,error:null}}catch(e){return{data:null,error:e instanceof Error?e:new Error(String(e))}}},!0,"friends"),u=async(n,e=!1)=>n?o(async()=>{try{const{data:r,error:s}=await i.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*),
            user:profiles!friendships_user_id_fkey(*)
          `).or(`user_id.eq.${n},friend_id.eq.${n}`).eq("status","accepted");if(s)throw s;const t=r?.map(d=>d.user_id===n?d.friend:d.user)||[];return b.value=t,q.value=r||[],{data:t,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!e,"friends"):{data:[],error:null},_=async(n,e=!1)=>n?o(async()=>{try{const{data:r,error:s}=await i.from("friendships").select(`
            *,
            user:profiles!friendships_user_id_fkey(*)
          `).eq("friend_id",n).eq("status","pending"),{data:t,error:d}=await i.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*)
          `).eq("user_id",n).eq("status","pending");if(s)throw s;if(d)throw d;return{data:[...r?.map(f=>({...f,type:"incoming"}))||[],...t?.map(f=>({...f,type:"outgoing"}))||[]],error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!e,"pendingRequests"):{data:[],error:null};return{friends:F,friendships:S,isLoading:v,sendFriendRequest:L,acceptFriendRequest:C,declineFriendRequest:R,fetchFriends:u,fetchPendingRequests:_,searchUsers:async n=>o(async()=>{try{const{data:e,error:r}=await i.rpc("search_users",{search_query:n,limit_count:10});if(r)throw r;return{data:e,error:null}}catch{try{const{data:e,error:r}=await i.from("profiles").select("*").eq("is_dummy",!1).limit(10);if(r)throw r;return{data:e?.filter(t=>t.email.toLowerCase().includes(n.toLowerCase())||t.name&&t.name.toLowerCase().includes(n.toLowerCase())||t.surname&&t.surname.toLowerCase().includes(n.toLowerCase())||t.username&&t.username.toLowerCase().includes(n.toLowerCase()))||[],error:null}}catch(e){return{data:null,error:e instanceof Error?e:new Error(String(e))}}}},!0,"friends"),removeFriend:async(n,e)=>o(async()=>{try{const{error:r}=await i.from("friendships").delete().eq("id",n);if(r)throw r;return e&&await u(e,!0),{error:null}}catch(r){return{error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),resetLoadingState:async n=>{h.value=0;const{clearDataLoaded:e}=y();e("friends"),e("pendingRequests"),n&&await u(n,!0)},subscribeToFriendships:n=>{c&&i.removeChannel(c),c=i.channel(`friendships:${n}`).on("postgres_changes",{event:"*",schema:"public",table:"friendships",filter:`or(user_id.eq.${n},friend_id.eq.${n})`},()=>{u(n,!0)}).subscribe()},subscribeToPendingRequests:(n,e)=>{l&&i.removeChannel(l),l=i.channel(`pending_requests:${n}`).on("postgres_changes",{event:"*",schema:"public",table:"friendships",filter:`and(or(user_id.eq.${n},friend_id.eq.${n}),status.eq.pending)`},()=>{_(n,!0).then(r=>{r?.data&&e&&e(r.data)})}).subscribe()},unsubscribeFromFriendships:()=>{c&&(i.removeChannel(c),c=null),l&&(i.removeChannel(l),l=null)},fetchEligibleUsersForDummySuggestion:async(n,e)=>e?o(async()=>{try{const{data:r,error:s}=await i.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*),
            user:profiles!friendships_user_id_fkey(*)
          `).or(`user_id.eq.${e},friend_id.eq.${e}`).eq("status","accepted");if(s)throw s;const t=(r||[]).map(a=>a.user_id===e?a.friend:a.user).filter(a=>a&&!a.is_dummy),{data:d,error:p}=await i.from("friendships").select("friend_id").eq("user_id",n);if(p)throw p;const f=new Set(d?.map(a=>a.friend_id)||[]);return{data:t.filter(a=>!f.has(a.id)),error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!1):{data:[],error:null}}};export{A as u};
