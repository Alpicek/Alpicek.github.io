import{u as T}from"./use-quasar-B4nle0bC.js";import{u as S}from"./auth-store-BSTOyDR1.js";import{supabase as u}from"./supabase-DkOw_aOL.js";import{u as $}from"./vue-i18n.runtime-EzKfoaH7.js";import{r as h,v as _}from"./index-DcT2ux80.js";function z(){const i=T(),{t:r}=$(),a=S(),o=h([]),m=h(!1),s=h(0),f=h(null),d=async(t=50)=>{if(a.user?.id){m.value=!0;try{const{data:e,error:n}=await u.from("notifications").select("*").eq("user_id",a.user.id).order("created_at",{ascending:!1}).limit(t);if(n)throw n;o.value=e||[],await l()}catch(e){console.error("Error fetching notifications:",e),i.notify({type:"negative",message:r("notifications.fetchError"),timeout:5e3})}finally{m.value=!1}}},l=async()=>{if(a.user?.id)try{const{data:t,error:e}=await u.rpc("get_unread_notifications_count");if(e)throw e;s.value=t||0}catch(t){console.error("Error getting unread count:",t)}},g=async t=>{try{const{error:e}=await u.rpc("mark_notification_read",{notification_id:t});if(e)throw e;await d(),await l(),i.notify({type:"positive",message:r("notifications.markedAsRead"),timeout:2e3})}catch(e){console.error("Error marking notification as read:",e),i.notify({type:"negative",message:r("notifications.markReadError"),timeout:5e3})}},b=async()=>{try{const{error:t}=await u.rpc("mark_all_notifications_read");if(t)throw t;await d(),s.value=0,i.notify({type:"positive",message:r("notifications.allMarkedAsRead"),timeout:2e3})}catch(t){console.error("Error marking all notifications as read:",t),i.notify({type:"negative",message:r("notifications.markAllReadError"),timeout:5e3})}},p=t=>{switch(t){case"friend_request":return"person_add";case"friend_accepted":return"check_circle";case"new_wish":return"card_giftcard";case"wish_bought":return"shopping_cart";case"wish_received":return"redeem";default:return"notifications"}},N=t=>{switch(t){case"friend_request":return"blue";case"friend_accepted":return"green";case"new_wish":return"purple";case"wish_bought":return"orange";case"wish_received":return"teal";default:return"grey"}},v=async t=>{t.is_read||await g(t.id);const e=t.data;switch(t.type){case"friend_request":case"friend_accepted":return"/friends";case"new_wish":case"wish_bought":case"wish_received":return e&&typeof e.wish_id=="string"?`/wishes?highlight=${e.wish_id}`:"/wishes";default:return"/"}},w=()=>{!a.user?.id||f.value||(f.value=u.channel(`notifications:${a.user.id}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"notifications",filter:`user_id=eq.${a.user.id}`},t=>{const e=t.new;o.value.unshift(e),s.value+=1,i.notify({type:"info",message:e.title,caption:e.body,icon:p(e.type),timeout:5e3,actions:[{label:r("notifications.view"),color:"white",handler:()=>{v(e)}}]})}).on("postgres_changes",{event:"UPDATE",schema:"public",table:"notifications",filter:`user_id=eq.${a.user.id}`},t=>{const e=t.new,n=o.value.findIndex(c=>c.id===e.id);n!==-1&&(o.value[n]=e),l()}).subscribe())},y=()=>{f.value&&(f.value.unsubscribe(),f.value=null)},k=async(t,e="Test notifikace",n="Toto je testovacÃ­ notifikace")=>{try{const{error:c}=await u.rpc("send_test_notification",{target_user_id:t,test_title:e,test_body:n});if(c)throw c;i.notify({type:"positive",message:r("notifications.testSent"),timeout:3e3})}catch(c){console.error("Error sending test notification:",c),i.notify({type:"negative",message:r("notifications.testSendError"),timeout:5e3})}},E=async()=>{a.user?.id&&(await d(),w())},A=()=>{y(),o.value=[],s.value=0},R=()=>o.value.filter(e=>!e.is_read),q=()=>o.value.filter(e=>e.is_read),C=_(()=>s.value>0);return{notifications:_(()=>o.value),getUnreadNotifications:R,getReadNotifications:q,unreadCount:_(()=>s.value),hasUnread:C,isLoading:_(()=>m.value),initialize:E,cleanup:A,fetchNotifications:d,markAsRead:g,markAllAsRead:b,handleNotificationClick:v,getNotificationIcon:p,getNotificationColor:N,subscribeToNotifications:w,unsubscribeFromNotifications:y,sendTestNotification:k,updateUnreadCount:l}}export{z as u};
