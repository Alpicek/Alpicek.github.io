import{supabase as s}from"./supabase-CU5Rm_jF.js";import{a as R}from"./auth-store-Brg5fDdc.js";import{v as g,r as m}from"./index-CQR_bE8v.js";const y=m([]),q=m([]),h=m(0);let c=null,l=null;const B=()=>{const{shouldShowLoading:w,markDataLoaded:b}=R(),E=g(()=>h.value>0),o=async(e,n=!0,r="friends")=>{n&&w(r)&&h.value++;try{const t=await e();return n&&b(r),t}finally{n&&w(r)&&h.value--}},v=g(()=>q.value),F=g(()=>y.value),S=async(e,n)=>o(async()=>{try{const{data:r,error:t}=await s.from("friendships").insert([{user_id:n,friend_id:e,status:"pending"}]).select().single();if(t)throw t;return{data:r,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),C=async(e,n)=>o(async()=>{try{const{data:r,error:t}=await s.from("friendships").update({status:"accepted"}).eq("id",e).select().single();if(t)throw t;return n&&await u(n,!0),{data:r,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),L=async e=>o(async()=>{try{const{data:n,error:r}=await s.from("friendships").update({status:"declined"}).eq("id",e).select().single();if(r)throw r;return{data:n,error:null}}catch(n){return{data:null,error:n instanceof Error?n:new Error(String(n))}}},!0,"friends"),u=async(e,n=!1)=>e?o(async()=>{try{const{data:r,error:t}=await s.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*),
            user:profiles!friendships_user_id_fkey(*)
          `).or(`user_id.eq.${e},friend_id.eq.${e}`).eq("status","accepted");if(t)throw t;const i=r?.map(d=>d.user_id===e?d.friend:d.user)||[];return q.value=i,y.value=r||[],{data:i,error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!n,"friends"):{data:[],error:null},_=async(e,n=!1)=>e?o(async()=>{try{const{data:r,error:t}=await s.from("friendships").select(`
            *,
            user:profiles!friendships_user_id_fkey(*)
          `).eq("friend_id",e).eq("status","pending"),{data:i,error:d}=await s.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*)
          `).eq("user_id",e).eq("status","pending");if(t)throw t;if(d)throw d;return{data:[...r?.map(f=>({...f,type:"incoming"}))||[],...i?.map(f=>({...f,type:"outgoing"}))||[]],error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!n,"pendingRequests"):{data:[],error:null};return{friends:v,friendships:F,isLoading:E,sendFriendRequest:S,acceptFriendRequest:C,declineFriendRequest:L,fetchFriends:u,fetchPendingRequests:_,searchUsers:async e=>o(async()=>{try{const{data:n,error:r}=await s.rpc("search_users",{search_query:e,limit_count:10});if(r)throw r;return{data:n,error:null}}catch{try{const{data:n,error:r}=await s.from("profiles").select("*").eq("is_dummy",!1).limit(10);if(r)throw r;return{data:n?.filter(i=>i.email.toLowerCase().includes(e.toLowerCase())||i.name&&i.name.toLowerCase().includes(e.toLowerCase())||i.surname&&i.surname.toLowerCase().includes(e.toLowerCase())||i.username&&i.username.toLowerCase().includes(e.toLowerCase()))||[],error:null}}catch(n){return{data:null,error:n instanceof Error?n:new Error(String(n))}}}},!0,"friends"),removeFriend:async(e,n)=>o(async()=>{try{const{error:r}=await s.from("friendships").delete().eq("id",e);if(r)throw r;return n&&await u(n,!0),{error:null}}catch(r){return{error:r instanceof Error?r:new Error(String(r))}}},!0,"friends"),resetLoadingState:async e=>{h.value=0,e&&await u(e,!0)},subscribeToFriendships:e=>{c&&s.removeChannel(c),c=s.channel(`friendships:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"friendships",filter:`or(user_id.eq.${e},friend_id.eq.${e})`},()=>{u(e,!0)}).subscribe()},subscribeToPendingRequests:(e,n)=>{l&&s.removeChannel(l),l=s.channel(`pending_requests:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"friendships",filter:`and(or(user_id.eq.${e},friend_id.eq.${e}),status.eq.pending)`},()=>{_(e,!0).then(r=>{r?.data&&n&&n(r.data)})}).subscribe()},unsubscribeFromFriendships:()=>{c&&(s.removeChannel(c),c=null),l&&(s.removeChannel(l),l=null)},fetchEligibleUsersForDummySuggestion:async(e,n)=>n?o(async()=>{try{const{data:r,error:t}=await s.from("friendships").select(`
            *,
            friend:profiles!friendships_friend_id_fkey(*),
            user:profiles!friendships_user_id_fkey(*)
          `).or(`user_id.eq.${n},friend_id.eq.${n}`).eq("status","accepted");if(t)throw t;const i=(r||[]).map(a=>a.user_id===n?a.friend:a.user).filter(a=>a&&!a.is_dummy),{data:d,error:p}=await s.from("friendships").select("friend_id").eq("user_id",e);if(p)throw p;const f=new Set(d?.map(a=>a.friend_id)||[]);return{data:i.filter(a=>!f.has(a.id)),error:null}}catch(r){return{data:null,error:r instanceof Error?r:new Error(String(r))}}},!1):{data:[],error:null}}};export{B as u};
