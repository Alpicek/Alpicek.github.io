import{supabase as h}from"./supabase-BIl89mDf.js";import{u as H,a as Q}from"./auth-store-Dqt3Ltmy.js";import{r as b,z as T}from"./index-DY4q8G6M.js";const v="*",m=async f=>{try{const o=f||[];if(o.length===0)return{data:[],error:null};const g=Array.from(new Set(o.flatMap(i=>[i.created_for_user_id,i.created_by_user_id]).filter(Boolean))),{data:p,error:w}=await h.from("profiles_public").select("*").in("id",g);if(w)throw w;const l=new Map(p.map(i=>[i.id,i]));return{data:o.map(i=>({...i,created_for_user:l.get(i.created_for_user_id),created_by_user:l.get(i.created_by_user_id)})),error:null}}catch(o){return{data:[],error:o instanceof Error?o:new Error(String(o))}}},N=()=>{const f=b([]),o=b(0),{shouldShowLoading:g,markDataLoaded:p}=Q(),w=T(()=>o.value>0),l=e=>({data:e||[],error:null}),y=e=>({data:null,error:e instanceof Error?e:new Error(String(e))}),i=async(e,r=!0,t="wishes")=>{r&&g(t)&&o.value++;try{const s=await e();return r&&p(t),s}finally{r&&g(t)&&o.value--}},q=async e=>i(async()=>{try{const{data:r,error:t}=await h.from("wishes").insert([{...e,visibility:e.visibility||"friends",is_bought:!1,is_received:!1}]).select(v).single();if(t)throw t;const{data:s}=await m([r]),a=s[0];return f.value.push(a),{data:a,error:null}}catch(r){return y(r)}}),u=async(e,r,t)=>{let s;typeof e=="string"?s={userId:e,isBackgroundRefresh:r||!1,context:t||"active",forSelf:!0}:s=e||{};const a=H(),{userId:n=a.user?.id,context:c="active",isBackgroundRefresh:_=!1,forSelf:U=!0}=s;return n?i(async()=>{try{let d=h.from("wishes").select(v).eq("created_for_user_id",n);U&&(d=d.eq("created_by_user_id",n)),c==="active"?d=d.eq("is_received",!1):c==="archived"&&(d=d.eq("is_received",!0));const M=c==="archived"?"updated_at":"created_at";d=d.order(M,{ascending:!1});const{data:$,error:S}=await d;if(S)throw S;const{data:z}=await m($);return l(z)}catch(d){return y(d)}},!_):l([])},x=(e,r=!1)=>u({...e&&{userId:e},context:"all",isBackgroundRefresh:r}),R=(e,r=!1)=>u({...e&&{userId:e},context:"archived",isBackgroundRefresh:r}),B=(e,r=!1)=>u({...e&&{userId:e},context:"active",isBackgroundRefresh:r}),k=(e,r=!1)=>u({...e&&{userId:e},context:"archived",isBackgroundRefresh:r,forSelf:!1}),A=(e,r=!1)=>u({...e&&{userId:e},context:r?"all":"active",isBackgroundRefresh:!0}),C=(e,r=!1)=>u({...e&&{userId:e},context:r?"all":"active",isBackgroundRefresh:!0,forSelf:!1}),L=e=>u({...e&&{userId:e},context:"archived",isBackgroundRefresh:!0,forSelf:!1}),P=async e=>e?i(async()=>{try{const{data:r,error:t}=await h.from("friendships").select("friend_id, user_id").or(`user_id.eq.${e},friend_id.eq.${e}`).eq("status","accepted");if(t)throw t;const s=r?.map(_=>_.user_id===e?_.friend_id:_.user_id)||[];if(s.length===0)return l([]);const{data:a,error:n}=await h.from("wishes").select(v).in("created_for_user_id",s).in("visibility",["friends","public"]).eq("is_received",!1).neq("created_for_user_id",e).order("created_at",{ascending:!1});if(n)throw n;const{data:c}=await m(a);return l(c)}catch(r){return y(r)}}):l([]),W=async(e,r)=>i(async()=>{try{const{data:t,error:s}=await h.from("wishes").update(r).eq("id",e).select(v).single();if(s)throw s;const{data:a}=await m([t]),n=a[0],c=f.value.findIndex(_=>_.id===e);return c!==-1&&(f.value[c]=n),{data:n,error:null}}catch(t){return y(t)}}),F=async e=>i(async()=>{try{const{error:r}=await h.from("wishes").delete().eq("id",e);if(r)throw r;return f.value=f.value.filter(t=>t.id!==e),{error:null}}catch(r){return{error:r instanceof Error?r:new Error(String(r))}}}),E=async(e,r,t,s)=>{try{const{data:a,error:n}=await h.from("wishes").select("*").eq("id",e).single();if(n||!a)return{error:new Error("Wish not found")};const c=s(a,t);return c?{error:new Error(c)}:W(e,{[r]:!a[r]})}catch(a){return{error:a instanceof Error?a:new Error(String(a))}}};return{wishes:f,isLoading:w,createWish:q,fetchWishes:u,fetchAllWishesForUser:x,fetchArchivedWishes:R,fetchActiveWishes:B,fetchReceivedWishes:k,fetchFriendsWishes:P,refreshWishes:A,refreshAllWishesForUser:C,refreshReceivedWishes:L,updateWish:W,deleteWish:F,toggleBought:(e,r)=>E(e,"is_bought",r,(t,s)=>t.created_for_user_id===s?"Cannot mark your own wish as bought":null),toggleReceived:(e,r)=>E(e,"is_received",r,(t,s)=>t.created_for_user_id!==s?"Cannot mark someone else's wish as received":null)}};export{N as u};
