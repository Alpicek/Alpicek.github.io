import{u as C}from"./use-quasar-DQXJwWie.js";import{u as I}from"./auth-store-CmGdf3qC.js";import{supabase as v}from"./supabase-DuJsgVtx.js";import{u as R}from"./vue-i18n.runtime-6hTAqrqs.js";import{r as f,v as a}from"./index-DXWY3Ptu.js";const _="https://pushserver-production.up.railway.app";function L(){const r=C(),{t:o}=R(),n=I(),c=f(!1),u=f("default"),s=f(null),b=f(""),l=f(!1),d=()=>(c.value="serviceWorker"in navigator&&"PushManager"in window,c.value&&(u.value=Notification.permission),c.value),k=t=>{const e="=".repeat((4-t.length%4)%4),i=(t+e).replace(/-/g,"+").replace(/_/g,"/"),y=window.atob(i),w=new Uint8Array(y.length);for(let p=0;p<y.length;++p)w[p]=y.charCodeAt(p);return w},m=async()=>{const t=await fetch(`${_}/vapid-public-key`);if(!t.ok)throw new Error(`Failed to get VAPID key: ${t.statusText}`);const e=await t.text();return b.value=e,e},g=async()=>{if(!d())throw new Error("Push notifications are not supported");const t=await Notification.requestPermission();return u.value=t,t},N=async()=>{if(!d())throw new Error("Push notifications are not supported");if(u.value!=="granted"&&await g()!=="granted")throw new Error("Notification permission denied");l.value=!0;try{const t=await navigator.serviceWorker.ready;let e=b.value;e||(e=await m());const i=await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:k(e)});return s.value=i,await A(i),r.notify({type:"positive",message:o("notifications.subscribedSuccess"),timeout:3e3}),i}catch(t){throw r.notify({type:"negative",message:o("notifications.subscribeError"),timeout:5e3}),t}finally{l.value=!1}},E=async()=>{if(!s.value)throw new Error("No active subscription");l.value=!0;try{await s.value.unsubscribe(),s.value=null,await $(),r.notify({type:"positive",message:o("notifications.unsubscribedSuccess"),timeout:3e3})}catch(t){throw r.notify({type:"negative",message:o("notifications.unsubscribeError"),timeout:5e3}),t}finally{l.value=!1}},$=async()=>{if(n.user?.id)try{const{error:t}=await v.from("push_subscriptions").delete().eq("user_id",n.user.id);if(t)throw t}catch{}},A=async t=>{if(n.user?.id)try{const e=t.toJSON(),{error:i}=await v.from("push_subscriptions").upsert({user_id:n.user.id,endpoint:e.endpoint||"",p256dh_key:e.keys?.p256dh||null,auth_key:e.keys?.auth||null,subscription_data:e,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{onConflict:"user_id"});if(i)throw i}catch{}},D=async()=>{if(!s.value)throw new Error("No active subscription");const t={title:o("notifications.testTitle"),body:o("notifications.testBody"),icon:"/icons/icon-192x192.png",badge:"/icons/icon-96x96.png",tag:"test-notification",data:{type:"test",timestamp:Date.now()}};await S(s.value,t)},S=async(t,e)=>{try{const w=btoa("alpik:tajneheslo"),p={subscription:t.toJSON(),notification:e},h=await fetch(`${_}/send-notification`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Basic ${w}`},body:JSON.stringify(p)});if(!h.ok){const B=await h.text();throw new Error(`Failed to send notification: ${h.status} ${B}`)}await h.json(),r.notify({type:"positive",message:o("notifications.sent"),timeout:3e3})}catch(i){throw r.notify({type:"negative",message:o("notifications.sendError"),timeout:5e3}),i}},P=async()=>{if(!d())return null;try{const e=await(await navigator.serviceWorker.ready).pushManager.getSubscription();return s.value=e,e}catch{return null}},T=async()=>{d(),c.value&&(await P(),await m(),await q())},q=async()=>{if(n.user?.id)try{const{data:t,error:e}=await v.from("push_subscriptions").select("*").eq("user_id",n.user.id).eq("is_active",!0).single();if(e&&e.code!=="PGRST116")return;t&&s.value}catch{}},x=a(()=>!!s.value),O=a(()=>c.value&&u.value!=="denied"),K=a(()=>u.value==="default");return{isSupported:a(()=>c.value),permission:a(()=>u.value),isSubscribed:x,canSubscribe:O,needsPermission:K,isLoading:a(()=>l.value),vapidPublicKey:a(()=>b.value),initialize:T,requestPermission:g,subscribe:N,unsubscribe:E,sendTestNotification:D,sendNotification:S,getCurrentSubscription:P,checkSupport:d}}export{L as u};
