import{B as C,z as o,C as K,D as $,r as d}from"./index-C8cpulqW.js";import{u as I}from"./use-quasar-29mMv4UO.js";import{u as O}from"./auth-store-DcQcOhW1.js";import{supabase as h}from"./supabase-BQifrLNN.js";import{u as Q}from"./vue-i18n.runtime-14acve9v.js";const W=C({name:"QBtnGroup",props:{unelevated:Boolean,outline:Boolean,flat:Boolean,rounded:Boolean,square:Boolean,push:Boolean,stretch:Boolean,glossy:Boolean,spread:Boolean},setup(n,{slots:c}){const i=o(()=>{const s=["unelevated","outline","flat","rounded","square","push","stretch","glossy"].filter(r=>n[r]===!0).map(r=>`q-btn-group--${r}`).join(" ");return`q-btn-group row no-wrap${s.length!==0?" "+s:""}`+(n.spread===!0?" q-btn-group--spread":" inline")});return()=>K("div",{class:i.value},$(c.default))}}),U="https://pushserver-production.up.railway.app";function z(){const n=I(),{t:c}=Q(),i=O(),s=d(!1),r=d("default"),u=d(null),v=d(""),l=d(!1),p=()=>(s.value="serviceWorker"in navigator&&"PushManager"in window,s.value&&(r.value=Notification.permission),s.value),S=e=>{const t="=".repeat((4-e.length%4)%4),a=(e+t).replace(/-/g,"+").replace(/_/g,"/"),b=window.atob(a),g=new Uint8Array(b.length);for(let f=0;f<b.length;++f)g[f]=b.charCodeAt(f);return g},y=async()=>{const e=await fetch(`${U}/vapid-public-key`);if(!e.ok)throw new Error(`Failed to get VAPID key: ${e.statusText}`);const t=await e.text();return v.value=t,t},w=async()=>{if(!p())throw new Error("Push notifications are not supported");const e=await Notification.requestPermission();return r.value=e,e},_=async()=>{if(!p())throw new Error("Push notifications are not supported");if(r.value!=="granted"&&await w()!=="granted")throw new Error("Notification permission denied");l.value=!0;try{const e=await navigator.serviceWorker.ready;let t=v.value;t||(t=await y());const a=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:S(t)});return u.value=a,await B(a),n.notify({type:"positive",message:c("notifications.subscribedSuccess"),timeout:3e3}),a}catch(e){throw n.notify({type:"negative",message:c("notifications.subscribeError"),timeout:5e3}),e}finally{l.value=!1}},P=async()=>{if(!u.value)throw new Error("No active subscription");l.value=!0;try{await u.value.unsubscribe(),u.value=null,await k(),n.notify({type:"positive",message:c("notifications.unsubscribedSuccess"),timeout:3e3})}catch(e){throw n.notify({type:"negative",message:c("notifications.unsubscribeError"),timeout:5e3}),e}finally{l.value=!1}},k=async()=>{if(i.user?.id)try{const{error:e}=await h.from("push_subscriptions").delete().eq("user_id",i.user.id);if(e)throw e}catch{}},B=async e=>{if(i.user?.id)try{const t=e.toJSON(),{error:a}=await h.from("push_subscriptions").upsert({user_id:i.user.id,endpoint:t.endpoint||"",p256dh_key:t.keys?.p256dh||null,auth_key:t.keys?.auth||null,subscription_data:t,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{onConflict:"user_id"});if(a)throw a}catch{}},m=async()=>{if(!p())return null;try{const t=await(await navigator.serviceWorker.ready).pushManager.getSubscription();return u.value=t,t}catch{return null}},q=async()=>{p(),s.value&&(await m(),await y(),await E())},E=async()=>{if(i.user?.id)try{const{data:e,error:t}=await h.from("push_subscriptions").select("*").eq("user_id",i.user.id).eq("is_active",!0).limit(1).maybeSingle();if(t)return;e&&u.value}catch{}},D=o(()=>!!u.value),A=o(()=>s.value&&r.value!=="denied"),N=o(()=>r.value==="default");return{isSupported:o(()=>s.value),permission:o(()=>r.value),isSubscribed:D,canSubscribe:A,needsPermission:N,isLoading:o(()=>l.value),vapidPublicKey:o(()=>v.value),initialize:q,requestPermission:w,subscribe:_,unsubscribe:P,getCurrentSubscription:m,checkSupport:p}}export{W as Q,z as u};
